server {

        root /var/www/html/platform;

        index index.html index.php;

        server_name usaid.dev01.nikel.com;

        error_log  /var/log/nginx/platform-error.log error;

        #location / {
        #       try_files $uri $uri/ =404;
        #       autoindex off;
        #}

        #----- Platform V3 -----#
        location / {
                #alias /var/www/html/sanbox.lenna.ai;
                #try_files $uri $uri/ @omniui;
                try_files $uri $uri/ /index.html;
        }

        location @omniui {
                rewrite /(.*)$ /index.html?/$1 last;
        }
        # pass PHP scripts to FastCGI server
        #
        #location ~ \.php$ {
        #       include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
        #       fastcgi_pass unix:/run/php/php7.3-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
        #}
        location ~ \.php$ {
                try_files $uri =404;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_index index.php;
                fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
                include fastcgi_params;
                fastcgi_param PATH_INFO $fastcgi_path_info;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        location ~ /\.ht {
                deny all;
        }
        location ~ /\. {
                access_log denied;
                log_not_found off;
                deny all;
        }
        location ~* (Gruntfile|package)\.(js|json|jsonc)$ {
                deny all;
                access_log off;
                log_not_found off;
        }
        location ~* /.+\.(markdown|md|twig|yaml|yml|ini)$ {
                deny all;
                access_log off;
                log_not_found off;
        }
        location ~ \.(ini|log|conf)$ {
                deny all;
                error_page 403 =404 / ;
        }

    # listen [::]:80 ssl; # managed by Certbot
    # listen 80 ssl; # managed by Certbot
    # ssl_certificate /etc/letsencrypt/live/platform/fullchain.pem; # managed by Certbot
    # ssl_certificate_key /etc/letsencrypt/live/platform/privkey.pem; # managed by Certbot
    # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    listen [::]:80; # managed by Certbot
    listen 80; # managed by Certbot

}
#server {
#    if ($host = sandbox.lenna.ai) {
#        return 301 https://$host$request_uri;
#    } # managed by Certbot



#       listen 80;
#       listen [::]:80;

#       server_name sandbox.lenna.ai;
#    return 404; # managed by Certbot


#}